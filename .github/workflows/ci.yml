name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12, 3.13]

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: crypto_bot_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: 🎨 Code formatting check
      run: |
        black --check .
        isort --check-only .
    
    - name: 🔍 Linting
      run: |
        flake8 .
        mypy .
        bandit -r src/
    
    - name: 🧪 Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/crypto_bot_test
      run: |
        pytest --cov=src --cov-report=xml --cov-report=html
    
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: 🔒 Run security scan
      run: |
        pip install safety
        safety check
    
    - name: 🔍 Run bandit security linter
      run: |
        pip install bandit
        bandit -r src/ -f json -o bandit-report.json

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: 🐳 Build Docker image
      run: |
        docker build -t crypto-bot:latest .
    
    - name: 🧪 Test Docker image
      run: |
        docker run --rm crypto-bot:latest python --version
